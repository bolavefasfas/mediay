version: "3"
services:
  
  sonarr:
    image: ghcr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}      
      - TZ=${TZ}
    volumes:
      - ${APPDATA}sonarr:/config
      - ${GMEDIA_TV}
      - ${DOWNLOAD}
    ports:
      - 8989:8989
      
  radarr:
    image: ghcr.io/linuxserver/radarr:nightly
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA}radarr:/config
      - ${GMEDIA_MOVIE}
      - ${DOWNLOAD}
    ports:
      - 7878:7878
      
      
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    environment:
      - PUID=${USVC}
      - PGID=${GSVC}
      - TZ=${TZ}
    volumes:
      - ${APPDATA}overseerr:/app/config
    ports:
      - 5055:5055
      
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: unless-stopped
    environment:
      - PUID=${USVC}
      - PGID=${GSVC}
      - TZ=${TZ}
      - AUTO_UPDATE=true
    volumes:
      - ${APPDATA}jackett:/config
    ports:
      - 9117:9117
      
  tautulli:
    image: ghcr.io/linuxserver/tautulli
    container_name: tautulli
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA}tautulli:/config
    ports:
      - 8181:8181
      
  plex:
    image: lscr.io/linuxserver/plex
    container_name: plex
    restart: unless-stopped
    network_mode: bridge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
    volumes:
      - /dev/shm:/transcode
      - ${APPDATASCLOUD}plex:/config      
      - ${GMEDIA}
      - ${SMEDIA}
      - ${EMEDIA}
      - ${OMEDIA}
    ports:
    - 32400:32400
      
  watchtower:
      image: containrrr/watchtower
      container_name: watchtower
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock
        
  portainer:
    image: portainer/portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:
  
   qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ${APPDATA}qbit:/config
      - ${GDMEDIA}
      - ${GMEDIA}
      - ${EMEDIA}
      - ${OMEDIA}
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

   npm:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port

    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
      
  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /dev/shm:/transcode
      - ${APPDATASCLOUD}jellyfin:/config      
      - ${GMEDIA}
      - ${SMEDIA}
      - ${EMEDIA}
      - ${OMEDIA}
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional      
    restart: "unless-stopped"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA}prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA}readarr:/config
      - /mnt/esmedia-cloud/books:/books #optional
      - /opt/downloads:/downloads #optional
    ports:
      - 8787:8787
    restart: unless-stopped
    
  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA}lidarr:/config
      - /mnt/egmedia-cloud/music:/music #optional
      - /opt/downloads:/downloads #optional
    ports:
      - 8686:8686
    restart: unless-stopped
